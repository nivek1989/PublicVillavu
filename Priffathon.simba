program Priffathon;

{$include_once ogLib/lib/kevinCustomMethods.simba}
{$include_once ogLib/lib/interfaces/mainScreen.simba}
{$i srl-6/lib/misc/srlplayerform.simba}

const
  DISASSEMBLESTUFF = true;
  DEBUG = true;
  MAKESCROLLS = false;
  MAXRUNTIME = 150;//minutes
  ENDAFTERRUNTIME = TRUE;//If false, ignores MAXRUNTIME

  //important order 1-8 uniquely, due to logic reasons, position 8 will never be hit.
  amloddPriority = 8;
  cadarnPriority = 6;
  crywsPriority = 2;
  hefinPriority = 1;
  ithellPriority = 4;
  lorwerthPriority = 7;
  meilyrPriority = 5;
  trahaernPriority = 3;

  //Preset list - use 0 if none, 1 and 2 represent your quick withdraw bar
  summoningPresetQuick = 1;//Amlodd, Shaman outfit, weight reducing gear.  Must be 1 or 2.
  woodcuttingPresetQuick = 0;//Cryws, lumberjack outfit, augmented axe
  agilityPresetQuick = 0;//Hefin, could use bonus agility or prayer outfit, tokens
  craftingPresetQuick = 0;//Ithell, if you want to use artisan's outfit
  miningPresetQuick = 0;//Trahaern, if you want to use a mining outfit or augmented pick

  //Preset list - use 0 if none, 1 through 10 for withdraw menu
  woodcuttingPresetSlow = 2;//Cryws, lumberjack outfit, augmented axe
  agilityPresetSlow = 0;//Hefin, could use bonus agility or prayer outfit, tokens
  craftingPresetSlow = 5;//Ithell, if you want to use artisan's outfit
  miningPresetSlow = 4;//Trahaern, if you want to use a mining outfit or augmented pick

  scriptVersion = '1.0';

  amloddTextureID = 481920;
  cadarnTextureID = 420964;
  crywsTextureID = 531359;
  hefinTextureID = 385054;
  ithellTextureID = 740162;
  lorwerthTextureID = 552951;
  meilyrTextureID = 339301;
  trahaernTextureID = 389691;
  amloddColorID = 2304834;
  cadarnColorID = 1982242;
  crywsColorID = 3687457;
  hefinColorID = 4264985;
  ithellColorID = 5197903;
  lorwerthColorID = 2960942;
  meilyrColorID = 666910;
  trahaernColorID = 4399925;

  siphonTextureID = 65280;
  harpModelID = 630958962;
  harmonicDustTextureID = 83385;
  harmonicDustColorID = 1387056;
  bankMinimapTextureID = 45052;
  bankMinimapTextureColorID = 4668991;
  bankPresetSlowLoadTextureID = 12620;
  bankPresetSlowLockedTextureID = 7750;
  bankPresetSlowSetupMenu = 30345;
  bankChestModelID = 3400406512;//maybe  3192404059,  1957046615
  summoningMinimapTextureID = 50489;
  summoningObeliskModelID = 2369536692;//Maybe 1436710946
  goldCharmTextureID = 134385;
  greenCharmTextureID = 134385;
  redCharmTextureID = 134385;
  blueCharmTextureID = 134385;

  ivyColor = 3576637;
  ivyTolerance = 10;
  ivyHue = 0.73;
  ivySat = 0.14;

type
  tClan = record
    name: string;
    hasVoice: boolean;
    priority, voiceTextureID, colorID: integer;
  end;

var
  form: ezForm;
  ezNotifyPlayer, ezPlaySound, ezDebug, ezMakeScrolls: eZElement;
  failureCD, inactivityCD, logOutCD: tCountDown;
  summoningTrips, geodesFound, disassembles, laps, dust, priorDust, currentClan, teleportCharges: integer;
  clans: Array [0..7] of tClan;
  amloddDisabled: boolean;

procedure initPlayerForm();
begin
  with playerForm do
  begin
    name := explode('.', ScriptFile)[0];

    editBoxLabels := ['World'];
    editBoxDefaults := ['0'];

    //checkBoxLabels := ['Debug'];
    //checkBoxDefaults := ['True'];

    //comboBoxLabels:= ['Allotment', 'Flower', 'Herb'];
    //comboBoxItems:= [['None', 'Potato'], ['None', 'Marigold'], ['None', 'Guam']];
    //comboBoxDefaults:= ['None', 'Marigold', 'None'];
  end;
end;

procedure formCreate();
begin
  form.create('Priffathon v' + scriptVersion);
  form.addImage('http://i.imgur.com/TfRQtwA.png', '', [0, 0], [280, 75], nil);
  form.addGroupbox('Settings', 'b s10', '', [10, 90], [260, 175]);
  ezNotifyPlayer := form.addCheckbox('Look at RS!', 's8', '', [20, 115], nil).prop('checked', false);
  ezPlaySound := form.addCheckbox('Play Sound Notify?', 's8', '', [20, 145], nil).prop('checked', true);
  ezDebug := form.addCheckbox('Debug?', 's8' , '', [20, 175], nil).prop('checked', true);
  ezMakeScrolls:= form.addCheckbox('Also make scrolls?', 's8', '', [20, 205], nil).prop('checked', false);
  form.show().height(form.height() + 15);
end;

//0 starting
function loadBankPresetSlow(slot: int32): boolean;
var
  loadTextures, lockTextures: glTextureArray;
  i: int32;
begin
  //todo: test this method completely
  if(slot = 0)then//The do-nothing spot.
  begin
    exit;
  end;
  if(slot < 0) or (slot > 10)then
  begin
    KillScript('Invalid slot number passed to loadBankPresetSlow.  This actually shouldn''t have been possible.');
  end;
  slot:= slot - 1;
  loadTextures:= ogl.getTextures(bankPresetSlowSetupMenu);
  mouse(loadTextures[0].randomizePointEllipse(10), mouse_Left);
  mouse(Point(RandomRange(186, 295), RandomRange(250, 313)), MOUSE_MOVE);
  wait(RandomRange(750,1250));

  loadTextures:= ogl.getTextures(bankPresetSlowLoadTextureID);

  if(loadTextures.indexes() >= slot)then
  begin
    if(ezDebug.checked())then
    begin
      writeln(loadTextures[slot]);
      drawBoxAroundTexture(loadTextures[slot]);
    end;
    lockTextures:= ogl.getTextures(bankPresetSlowLockedTextureID, Box(1, loadTextures[slot].bounds.Y1-1, 799, loadTextures[slot].bounds.Y2+1));
    if(lockTextures.indexes() > 0)then
    begin
      debugPrint('Invalid (locked) slot number passed to loadBankPresetSlow.', ezDebug.checked());
      exit;
    end;
    mouse(loadTextures[slot].randomizePointEllipse(10), mouse_Left);
  end;
  Wait(RandomRange(600, 950));
  //TODO: Verify it closes.
  loadTextures:= ogl.getTextures(35240);
  if(loadTextures.indexes() > 0)then
  begin
    mouse(loadTextures[0].randomizePointEllipse(10), mouse_Left);
  end;
  //TODO: Close window
end;

procedure Initialize()
var
  amlodd, cadarn, cryws, hefin, ithell, lorwerth, meilyr, trahaern: tClan;
  i, j: integer;
begin
  amlodd.name:= 'Amlodd';
  amlodd.priority:= amloddPriority;
  amlodd.voiceTextureID:= amloddTextureID;
  cadarn.name:= 'Cadarn';
  cadarn.priority:= cadarnPriority;
  cadarn.voiceTextureID:= cadarnTextureID;
  cryws.name:= 'Cryws';
  cryws.priority:= crywsPriority;
  cryws.voiceTextureID:= crywsTextureID;
  hefin.name:= 'Hefin';
  hefin.priority:= hefinPriority;
  hefin.voiceTextureID:= hefinTextureID;
  ithell.name:= 'Ithell';
  ithell.priority:= ithellPriority;
  ithell.voiceTextureID:= ithellTextureID;
  lorwerth.name:= 'Lorwerth';
  lorwerth.priority:= lorwerthPriority;
  lorwerth.voiceTextureID:= lorwerthTextureID;
  meilyr.name:= 'Meilyr';
  meilyr.priority:= meilyrPriority;
  meilyr.voiceTextureID:= meilyrTextureID;
  trahaern.name:= 'Trahaern';
  trahaern.priority:= trahaernPriority;
  trahaern.voiceTextureID:= trahaernTextureID;

  if(amlodd.priority = cadarn.priority) or (amlodd.priority = cryws.priority) or (amlodd.priority = hefin.priority) or (amlodd.priority = ithell.priority) or (amlodd.priority = lorwerth.priority) or (amlodd.priority = meilyr.priority) or (amlodd.priority = trahaern.priority)then
    KillScript('Amlodd matched another clan''s priority level.  Fix this and run again.');
  if((cadarn.priority = cryws.priority) or (cadarn.priority = hefin.priority) or (cadarn.priority = ithell.priority) or (cadarn.priority = lorwerth.priority) or (cadarn.priority = meilyr.priority) or (cadarn.priority = trahaern.priority))then
    KillScript('Cadarn matched another clan''s priority level.  Fix this and run again.');
  if(cryws.priority = hefin.priority) or (cryws.priority = ithell.priority) or (cryws.priority = lorwerth.priority) or (cryws.priority = meilyr.priority) or (cryws.priority = trahaern.priority)then
    KillScript('Cryws matched another clan''s priority level.  Fix this and run again.');
  if(hefin.priority = ithell.priority) or (hefin.priority = lorwerth.priority) or (hefin.priority = meilyr.priority) or (hefin.priority = trahaern.priority)then
    KillScript('Hefin matched another clan''s priority level.  Fix this and run again.');
  if(ithell.priority = lorwerth.priority or ithell.priority = meilyr.priority or ithell.priority = trahaern.priority)then
    KillScript('Ithell matched another clan''s priority level.  Fix this and run again.');
  if(lorwerth.priority = meilyr.priority) or (lorwerth.priority = trahaern.priority)then
    KillScript('Lorwerth matched another clan''s priority level.  Fix this and run again.');
  if(meilyr.priority = trahaern.priority)then
    KillScript('Meilyr matched Trahaern''s priority level.  Fix this and run again.');

  clans[amlodd.priority-1]:= amlodd;
  clans[cadarn.priority-1]:= cadarn;
  clans[cryws.priority-1]:= cryws;
  clans[hefin.priority-1]:= hefin;
  clans[ithell.priority-1]:= ithell;
  clans[lorwerth.priority-1]:= lorwerth;
  clans[meilyr.priority-1]:= meilyr;
  clans[trahaern.priority-1]:= trahaern;

  if(summoningPresetQuick > 2) or (summoningPresetQuick < 0)then
    killScript('summoningPresetQuick was set to an invalid number.');
  if(woodcuttingPresetQuick > 2) or (woodcuttingPresetQuick < 0)then
    killScript('woodcuttingPresetQuick was set to an invalid number.');
  if(agilityPresetQuick > 2) or (agilityPresetQuick < 0)then
    killScript('agilityPresetQuick was set to an invalid number.');
  if(craftingPresetQuick > 2) or (craftingPresetQuick < 0)then
    killScript('craftingPresetQuick was set to an invalid number.');
  if(miningPresetQuick > 2) or (miningPresetQuick < 0)then
    killScript('miningPresetQuick was set to an invalid number.');

  if(woodcuttingPresetSlow > 10) or (woodcuttingPresetSlow < 0)then
    killScript('woodcuttingPresetSlow was set to an invalid number.');
  if(agilityPresetSlow > 10) or (agilityPresetSlow < 0)then
    killScript('agilityPresetSlow was set to an invalid number.');
  if(craftingPresetSlow > 10) or (craftingPresetSlow < 0)then
    killScript('craftingPresetSlow was set to an invalid number.');
  if(miningPresetSlow > 10) or (miningPresetSlow < 0)then
    killScript('miningPresetSlow was set to an invalid number.');

  logOutCD.setTime(MAXRUNTIME * 60000);
end;

procedure checkIfComplete();
begin
  if(ENDAFTERRUNTIME and logOutCD.isFinished)then
  begin
    players[currentPlayer].logout();//TODO, make sure works.
    killScript('Script has reached its Max Runtime.  Shutting down.');
  end;
end;

procedure proggy();
var
  currentDust, perHour: integer;
  time: string;
begin
  time := getTime(getTimeRunning());
  currentDust:= inventory.getCount(harmonicDustTextureID);
  dust:= dust + currentDust - priorDust;
  ClearDebug();
  Writeln('Currently on ' + clans[currentClan].name);
  writeln('We''ve been running for ' + time);
  writeln('We have ' + Tostring(logOutCD.timeRemaining) + 'ms time left.');
  perHour:= round(summoningTrips * (3600.0 / (getTimeRunning / 1000.0)));
  writeln(inttoStr(summoningTrips) + ' summoning trips (' + inttostr(perHour) + '/hr).');
  perHour := round(dust * (3600.0 / (getTimeRunning / 1000.0)));
  writeln(inttoStr(dust) + ' dust gathered (' + inttostr(perHour) + '/hr).');
  perHour := round(laps * (3600.0 / (getTimeRunning / 1000.0)));
  writeln(inttostr(laps) + ' laps ran (' + inttostr(perHour) + '/hr).');
  perHour := round(disassembles * (3600.0 / (getTimeRunning / 1000.0)));
  writeln(inttostr(disassembles) + ' items disassembled (' + inttostr(perHour) + '/hr).');
  perHour := round(geodesFound * (3600.0 / (getTimeRunning / 1000.0)));
  writeln(inttostr(geodesFound) + ' geodes/nests found (' + inttostr(perHour) + '/hr).');

  priorDust:= currentDust;
end;

function bankOpen(): boolean;
begin
  result:= bankScreen.isOpen();
  //result:= bank.hasBank();
end;

function siphonTool(): boolean;
var
  tools, inventionPouch, siphons: glTextureArray;
  tool, siphon: glTexture;
  toolIDs: TIntegerArray;
  i: integer;
  clickPoint: TPoint;
  success: boolean;
begin
  gameTabs.openTab(TAB_EQUIPMENT);
  toolIDs:= [48450, 58140];//Augmented crystal hatchet = 48450,Fishing rod-o-matic = 58140
  for i:=0 to high(toolIDs) do
  begin
    tools:= ogl.getTextures(toolIDs[i]);
    if(tools.indexes() > 0)then
    begin
      mouse(tools.closestTo(clientCenter)[0].randomizePointEllipse(15), mouse_Left);
      gameTabs.openTab(TAB_BACKPACK);
      wait(RandomRange(650,1350));
      siphons:= ogl.getTextures(siphonTextureID);
      if(siphons.indexes() > 0)then
      begin
        siphon:= siphons[0];
        tool:= inventory.getItemLastSlot(toolIDs[i]);
        Mouse(siphon.randomizePointEllipse(15), mouse_Left);
        Mouse(tool.randomizePointEllipse(15), mouse_Left);
        writeln('TODO: CONFIRM THAT THE CONFIRM Screen showed up');
        wait(randomRange(550,1250));
        SendKeys('1', 15+random(10), 15+random(10));
        success:= true;
      end;
    end;
  end;
end;

function disassembleLevelTen(): boolean;
var
  tools, inventionPouch: glTextureArray;
  tool: glTexture;
  toolIDs: TIntegerArray;
  i: integer;
  clickPoint: TPoint;
  success: boolean;
begin
  killScript('Implement the disassembleLevelTen method completely');
  gameTabs.openTab(TAB_EQUIPMENT);
  toolIDs:= [48450, 58140];//Augmented crystal hatchet = 48450,Fishing rod-o-matic = 58140
  for i:=0 to high(toolIDs) do
  begin
    tools:= ogl.getTextures(toolIDs[i]);
    if(tools.indexes() > 0)then
    begin
      mouse(tools.closestTo(clientCenter)[0].randomizePointEllipse(15), mouse_Left);
      gameTabs.openTab(TAB_BACKPACK);
      wait(RandomRange(650,1350));
      tool:= inventory.getItemLastSlot(toolIDs[i]);
      Mouse(tool.randomizePointEllipse(15), MOUSE_MOVE);
      GetMousePos(clickPoint.x, clickPoint.y);
      inventionPouch:= ogl.getTextures(11926);
      if(inventionPouch.indexes() > 0)then
      begin
        dragMouse(inventionPouch.closestTo(clickPoint)[0].randomizePointEllipse(10));
        writeln('TODO: CONFIRM THAT THE CONFIRM Screen showed up');
        wait(randomRange(550,1250));
        SendKeys('1', 15+random(10), 15+random(10));
        success:= true;
      end;
    end;
  end;

  //todo, test equipping next augmented item
  if(success)then
  begin
    tool:= inventory.getItemFirstSlot(tool.ID);
    mouse(tool.randomizePointEllipse(15), mouse_Left);
    wait(RandomRange(650,1350));
  end;


  //This is generic logic for any disassembly... but generic won't be friendly after trying to find in mess of the backpack
  {
  var
    equipmentSlots: glTextureArray;
    expectedWeaponSlot: glTexture;

  equipmentSlots:= ogl.getTextures(102626);
  if(equipmentSlots.indexes() > 0)then
  begin
    writeln('success');
    expectedWeaponSlot:= equipmentSlots[3];//At least appears to be consistently 3
  end else
    exit;
  mouse(expectedWeaponSlot.randomizePointEllipse(15), MOUSE_MOVE);
  wait(RandomRange(100,250));
  if(pos('Remove Augmented', tMouse.getTooltip()) = 0)then
  begin
    GetMousePos(clickPoint.x, clickPoint.y);
    ClickMouse(clickPoint.x, clickPoint.y, mouse_Left);
    gameTabs.openTab(TAB_BACKPACK);
  end;}
end;

function pickCurrentClan(): tClan;
var
  voice: glTextureArray;
  i: integer;
begin
  for i:=0 to 7 do
  begin
    voice:= ogl.getTextures(clans[i].voiceTextureID);
    if(voice.indexes > 0)then
    begin
      result:= clans[i];
      currentClan:= i;
      exit;
    end;
  end;
end;

procedure repairCrystals();
var
  repairNPC: glModelArray;
  crystalTextures: glTextureArray;
  clickPoint: tPoint;
  success: boolean;
begin
  debugPrint('Repairing teleport crystals.', ezDebug.checked());
  repairNPC := ogl.getModels(939834135, IntToBox(0, 0, 576, 388));
  crystalTextures := ogl.getTextures([50235], [1318429, 1318685]);
  if (length(repairNPC) = 0) then
  begin
    debugPrint('Script failure, terminating (No Repair NPC in Range)', ezDebug.checked());
    terminateScript();
  end;
  clickPoint := crystalTextures[random(length(crystalTextures) - 1)].toPoint();
  failureCD.setTime(15000);
  repeat
    if tmouse.rightClickOption(clickPoint.randomizePointEllipse(20), 'Use Crystal', random(300, 600)) then
      success := true;
    wait(random(400, 900));
  until (success = true) or failureCD.isFinished();
  if(not success)then
    killScript('Crystal Detection (Repair)');
  clickPoint:= repairNPC[0].toPoint();
  failureCD.setTime(15000);
  repeat
    if tmouse.rightClickOption(clickPoint.adjustPosition(5, -10).randomizePointEllipse(16), 'Use Crystal teleport seed -> Islwyn', random(300, 600)) then
      success := true;
    wait(random(400, 900));
  until (success = true) or failureCD.isFinished();
  if(not success)then
    killScript('Repair NPC Detection');
  waitFlag();
  failureCD.setTime(15000);
  repeat
    wait(random(400, 900));
  until (pos('Enchant teleport seed?', ogl.getChars().toString())) or failureCD.isFinished();
  if(failureCD.isFinished)then
    killScript('Repair Interface');
  wait(random(400, 900));
  tmouse.click('OK', false);
  wait(random(1200, 2400));
  teleportCharges := length(inventory.getItems([50235], [1318429])) * 3;
end;

//This really just travels to the leftmost visible bank texture
function TravelToAmloddFromIthell(): boolean;
var
  bankMinimapTexture: glTextureArray;
  bank: glTexture;
  clickPoint: TPoint;
  i: integer;
begin
  bankMinimapTexture:= ogl.getTextures(bankMinimapTextureID, bankMinimapTextureColorID, IntToBox(0,0,800,600));
  if(bankMinimapTexture.indexes() = 0)then
  begin
    exit;//Could not find the bank texture.
  end;
  bank:= bankMinimapTexture[0];
  if(bankminimapTexture.indexes() > 1)then
  begin
    for i:=1 to high(bankMinimapTexture) do
    begin
      if(bankMinimapTexture[i].X < bank.x)then
        bank:= bankMinimapTexture[i];
    end;
  end;
  clickPoint:= bank.randomizePointEllipse(15);
  if(clickPoint.x < 790)then
  begin
    clickPoint.Y:= clickPoint.Y - 5;
    if(clickPoint.Y <= 58)then
      clickPoint.Y = 59;
    if(clickPoint.Y >= 193)then
      clickPoint.Y = 192;
    mouse(clickPoint, mouse_left);
    Wait(2000);
    if(not isFlag())then
      mouse(clickPoint, mouse_left);
    Wait(4000);
    result:= true;
  end;
end;

//W/O VoS, 61.5k xp/hr 726 dust/hr - 2 hour test
function Ithell(): boolean;
var
  harp: glModelArray;
  voice: glTextureArray;
  clickPoint: TPoint;
  found: boolean;
  matchPercent: extended;
  ran, waitTimer: integer;
  debugMessage: string;
begin
  harp:= ogl.getModels(harpModelID, mainScreenBox);
  if(not harp.isEmpty()) then
  begin
    mouse(harp.closestTo(clientCenter)[0].randomizePointEllipse(15), MOUSE_MOVE);
    found:= true;
    GetMousePos(clickPoint.x, clickPoint.y);
    ClickMouse(clickPoint.x, clickPoint.y, mouse_Left);
    wait(8000);
  end else begin
    writeln('Never found the harp to kick off our whole process.');
    exit;
  end;

  //Continuously verify Ithell remains active and check when to re-tune
  found:= false;
  voice:= ogl.getTextures(ithellTextureID);
  while(voice.indexes() >= 0) do
  begin
    checkIfComplete();
    //TODO: Make sure you don't wait too long before a logout prevention
    failureCD.setTime(900000);//15 minutes
    inactivityCD.setTime(randomRange(180000, 280000));
    ran:= RandomRange(1,100);
    if(ran <=7)then begin
      debugMessage:= '30% out of tune';
    end else if(ran <=23)then begin
      debugMessage:= '40% out of tune';
    end else if(ran <=98)then begin
      debugMessage:= '50% out of tune';
    end else begin
      debugMessage:= '60% out of tune';
    end;
    debugPrint('We shall re-tune at : ' + debugMessage, ezDebug.checked());
    repeat
      if(inactivityCD.isFinished)then
      begin
        preventLogout();
        inactivityCD.setTime(randomRange(180000, 300000));
      end;
      AmIBrowsingAnotherWindow();
      wait(500);
      if(pos('Your harp is now 100% in tune.', readLastChatLines(4)) = 0)then
      begin
        if(ran <=7)then
        begin
          if(pos('Your harp is 30% out of tune.', readLastChatLines(4)) <> 0)then
          begin
            debugPrint('30% out of tune detected.', ezDebug.checked());
            found:= true;
          end;
        end;
        if(ran <= 23)then
        begin
          if(pos('Your harp is 40% out of tune.', readLastChatLines(4)) <> 0)then
          begin
            debugPrint('40% out of tune detected.', ezDebug.checked());
            found:= true;
          end;
        end;
        if(ran <= 98)then
        begin
          if(pos('Your harp is 50% out of tune.', readLastChatLines(4)) <> 0)then
          begin
            debugPrint('50% out of tune detected.', ezDebug.checked());
            found:= true;
          end;
        end else begin
          if(pos('Your harp is 60% out of tune.', readLastChatLines(4)) <> 0)then
          begin
            debugPrint('60% out of tune detected.', ezDebug.checked());
            found:= true;
          end;
        end;
      end;
    until (found or failureCD.isFinished());

    //We're a real player and real players don't notice stuff right away.
    if(found)then
    begin
      waitTimer:= buildWaitTimer(500, 13500, (randomRange(1,87) <= 2), ezDebug.checked());
      if(inactivityCD.timeRemaining < waitTimer)then
      begin
        waitTimer:= inactivityCD.timeRemaining - randomRange(1300, inactivityCD.timeRemaining);
      end;
      wait(waitTimer);
      found:= false;
    end else begin;
      exit;
    end;

    //Re-tune dat harp
    harp:= ogl.getModels(harpModelID, mainScreenBox);
    if(not harp.isEmpty()) then
    begin
      mouse(harp.closestTo(clientCenter)[0].randomizePointEllipse(15), MOUSE_MOVE);
      found:= true;
      GetMousePos(clickPoint.x, clickPoint.y);
      ClickMouse(clickPoint.x, clickPoint.y, mouse_Left);
      wait(6500);
    end;
    found:= false;
    proggy;
    voice:= ogl.getTextures(ithellTextureID);
  end;
  if(voice.indexes() = 0)then
  begin
    result:= true;
    Writeln('Ithell is done!');
  end;
end;

function attemptObstacle(text: string; id, timerMin, timerMax: int32): boolean;
var
  walkway: glModelArray;
begin
  walkway:= ogl.getModels(id);
  if (not walkway.isEmpty and tmouse.rightClickOption(walkway.closestTo(clientCenter)[0].randomizePointEllipse(15), text, random(300, 600))) then
  begin
    Wait(buildWaitTimer(timerMin, timerMax, (RandomRange(1, 100) = 1), ezDebug.checked()));
    result:= true;
  end else begin
    wait(RandomRange(750,1350));
  end;
end;

function Hefin(): boolean;
var
  walkway: glModelArray;
  voice: glTextureArray;
  clickPoint: TPoint;
  hadMaxVelocity, successfulClick: boolean;
  matchPercent: extended;
  ran, waitTimer: integer;
  debugMessage: string;
begin
  //'Talent Scout:Hey, Seoul Devil! Come over here!' to
  //'Crate Expectations' open a bunch of crates asap
  //'Karaoke' (just spam running)
  //'Put The Thing In The Other Thing!' - it's a matching game.


  //Continuously verify Hefin remains active and jump through next section.
  voice:= ogl.getTextures(hefinTextureID);
  while(voice.indexes() >= 1) do
  begin
    getPlayerModel(ezDebug.checked());
    hadMaxVelocity:= false;
    successfulClick:= false;
    //Leap across Walkway
    if(attemptObstacle('Leap across Walkway', 1117602917, 9200, 9750))then
    begin
      successfulClick:= true;
    end

    //Traverse Cliff
    if(pos('Maximum velocity! You automatically traverse the next obstacle.', readLastChatLines(1)) <> 0)then
    begin
      hadMaxVelocity:= true;
      successfulClick:= true;
      wait(5500);
    end else begin
      if(attemptObstacle('Traverse Cliff', 3676278851, 6650, 7150))then
      begin
        successfulClick:= true;
      end;
    end;

    //Scale Cathedral - Leap through Windows (first if possible)
    if((not hadMaxVelocity) and pos('Maximum velocity! You automatically traverse the next obstacle.', readLastChatLines(1)) <> 0)then
    begin
      hadMaxVelocity:= true;
      successfulClick:= true;
      wait(6500);
      if(attemptObstacle('Vault Roof', 3676278851, 9200, 10000))then
      begin
        successfulClick:= true;
      end;
    end else begin
      if(not attemptObstacle('Leap through Window', 3044616169, 8150, 8750))then
      begin
        if(attemptObstacle('Scale Cathedral', 3676278851, 11500, 12250))then
        begin
          successfulClick:= true;
        end;

        //Vault Roof
        if((not hadMaxVelocity) and pos('Maximum velocity! You automatically traverse the next obstacle.', readLastChatLines(1)) <> 0)then
        begin
          hadMaxVelocity:= true;
          successfulClick:= true;
          wait(4500);
        end else begin
          if(attemptObstacle('Vault Roof', 3676278851, 9050, 9600))then
          begin
            successfulClick:= true;
          end;
        end;
      end else
      begin
        successfulClick:= true;
      end;
    end;

    //Slide down Zip line - Ride the light creature instead (if possible)
    if((not hadMaxVelocity) and pos('Maximum velocity! You automatically traverse the next obstacle.', readLastChatLines(1)) <> 0)then
    begin
      hadMaxVelocity:= true;
      successfulClick:= true;
      wait(3000);
      //Merge with Light creature
      if(attemptObstacle('Merge with Light creature', 6094873, 7250, 8000))then
      begin
        laps:= laps + 1;
        successfulClick:= true;
      end;
    end else begin
      if(attemptObstacle('Merge with Light creature', 6094873, 6250, 7000))then
      begin
        laps:= laps + 1;
        successfulClick:= true;
      end else begin
        if(attemptObstacle('Slide down Zip line', 3676278851, 8250, 8700))then
        begin
          successfulClick:= true;
        end;
      end;
      //Merge with Light creature
      if((not hadMaxVelocity) and pos('Maximum velocity! You automatically traverse the next obstacle.', readLastChatLines(1)) <> 0)then
      begin
        hadMaxVelocity:= true;
        successfulClick:= true;
        wait(1500);
      end else begin
        if(attemptObstacle('Merge with Light creature', 6094873, 7250, 8000))then
        begin
          laps:= laps + 1;
          successfulClick:= true;
        end;
      end;
    end;

    //TODO: bank when near full inv
    wait(RandomRange(550, 960));
    if(not successfulClick)then
    begin
      wait(1500);
    end;
    voice:= ogl.getTextures(hefinTextureID);
    proggy();
  end
end;

function Cryws(): boolean;
var
  groundItem: glModelArray;
  voice: glTextureArray;
  pt: TPoint;
  x, y, i, failureCount, idleTimer: integer;
  tpa: TPointArray;
  ATPA: T2DPointArray;
  match: extended;
  idle, foundGeode, foundNest, disassembled: boolean;
  geodeCD, nestCD, disassembledCD: tCountDown;
begin
  //todo: use potions, auras, summoning pouches
  voice:= ogl.getTextures(crywsTextureID);
  tMinimap.setDegrees(330 + randomRange(-3, 3));
  while(voice.indexes() >= 0) do
  begin
    if(failureCount = 4)then
      killScript('We couldn''t find any Ivy... I''m an awful scripter!');
    findColorsSpiralTolerance(x, y, tpa, ivyColor, mainScreenBox, ivyTolerance, colorSetting(2, ivyHue, ivySat));
    ATPA:= tpa.cluster(10);// SplitTPA(TPA, 15);
    FilterTPAsBetween(atpa, 0, 50);
    SortATPAFromMidPoint(ATPA, mainScreen.getCenterPoint);
    for i:= 0 to high(ATPA) do
    begin
      mouse(ATPA[i].getBounds().getGaussPoint(), MOUSE_MOVE);
      wait(randomrange(350, 750));
      match:= StringMatch('chop ivy', LowerCase(GetMouseOverText(true)));
      if(match >= 0.75)then
      begin
        break;
      end;
    end;
    if(match >= 0.75)then
    begin
      fastClick(mouse_Left);
      idle:= false;
      failureCount:= 0;
      Wait(1000);
      waitFlag();
      Wait(1000);
      failureCD.setTime(randomRange(89750,115500));
      while(not failureCD.isFinished and not idle)do
      begin
        if(getPlayerModel(ezDebug.checked()).ID = playerModel.ID)then
        begin
          idleTimer:= idleTimer + 1;
          if(idleTimer >= 10)then
          begin
            debugPrint('We''ve detected the idle model for 10 loops', ezDebug.checked());
            idle:= true;
            idleTimer:= 0;
          end;
        end else begin
          idleTimer:= 0;
          idle:= false;
        end;

        //Check for geode, nests, and lvl 10.
        if(disassembledCD.isFinished())then
        begin
          disassembled:= false;
        end;
        if(geodeCD.isFinished())then
        begin
          foundGeode:= false;
        end;
        if(nestCD.isFinished())then
        begin
          foundNest:= false;
        end;

        if((not foundGeode) and (pos('A crystal geode falls out of the ivy.', readLastChatLines(4)) <> 0))then
        begin
          groundItem:= ogl.getModels(999698704);
          if(groundItem.indexes() > 0)then
          begin
          //todo add right click pick up
            if(tmouse.rightClickOption(groundItem.closestTo(clientCenter)[0].randomizePointEllipse(15), '', random(300, 600))) then
            begin
              Wait(buildWaitTimer(1000, 5750, false, ezDebug.checked()));
              idle:= true;
              geodesFound:= geodesFound + 1;
              foundGeode:= true;
              geodeCD.setTime(120000);
            end;
          end;
        end;
        if((not foundNest) and (pos('A bird''s nest falls out of the ivy.', readLastChatLines(4)) <> 0))then
        begin//todo, get the model ids for all 5 possibilities (seed, ring, 3 bird eggs)
          killScript('Nest fell, hopefully you notice this!');
          Wait(buildWaitTimer(1000, 5750, false, ezDebug.checked()));
          idle:= true;
          geodesFound:= geodesFound + 1;
          foundNest := true;
          nestCD.setTime(120000);
        end;
        if(DISASSEMBLESTUFF and (not disassembled) and (pos('Congratulations! Your Augmented crystal hatchet has gained a level! It is now level 10', readLastChatLines(4)) <> 0))then
        begin
          if(disassembleLevelTen())then
          begin
            disassembles:= disassembles + 1;
            idle:= true;
            disassembled:= true;
            disassembledCD.setTime(300000);
          end;
        end else if((not DISASSEMBLESTUFF) and (not disassembled) and (pos('Congratulations! Your Augmented crystal hatchet has gained a level! It is now level 10', readLastChatLines(4)) <> 0))then
        begin
          if(siphonTool())then
          begin
            disassembles:= disassembles + 1;
            idle:= true;
            disassembled:= true;
            disassembledCD.setTime(300000);
          end;
        end;
        Wait(randomRange(500,850));
        AmIBrowsingAnotherWindow();
      end;
      wait(500);
    end else begin
      failureCount:= failureCount + 1;
      debugPrint('Didn''t find the ivy to kick off our whole process.', ezDebug.checked());
      if(Random(0, 1) = 0)then
      begin
        tMinimap.setDegrees(tMinimap.getDegrees() + 30 + randomRange(-6, 6));
      end else begin
        tMinimap.setDegrees(tMinimap.getDegrees() - 30 + randomRange(-6, 6));
      end;
      wait(RandomRange(8250, 9750));
    end;
  end;
  setCameraLikePlayer();
  if(voice.indexes() = 0)then
  begin
    result:= true;
    Writeln('Cryws is done!');
  end else
    killScript('Crwys failed for some reason.');
end;

function Amlodd(): boolean;
var
  voice, summoningMarker, bankMinimapTexture: glTextureArray;
  chest, obelisk: glModelArray;
  clickPoint: TPoint;
  success: boolean;
  i: int32;
begin
  voice:= ogl.getTextures(amloddTextureID);
  while(voice.indexes() >= 1) do
  begin
    success:= false;
    //Open bank.
    if(not bankOpen())then
    begin
      failureCD.setTime(15000);
      repeat
        if(isFlag())then
        begin
          wait(3000);
        end;
        chest:= ogl.getModels(bankChestModelID);
        if(chest.indexes() > 0)then
        begin
          if(tmouse.rightClickOption(chest.closestTo(clientCenter)[0].randomizePointEllipse(15), 'Use Bank chest', random(200, 400))) then
          begin
            Wait(1000);
            waitFlag();
            failureCD.setTime(10000);
            repeat
              Wait(RandomRange(350, 600));
            until(failureCD.isFinished or bankOpen() or pinScreen.isOpen());
            if(bankOpen() or pinScreen.isOpen())then
              success:= true;
          end;
        end;
      until(success or failureCD.isFinished);
      if(not success)then
        killScript('Bank chest never found.');
    end;

    //Is it a pin?
    if(pinScreen.isOpen())then
    begin
      pinScreen.enter(players[0].bankPin);
      Wait(RandomRange(1000, 2200));
    end;


    //Withdraw
    failureCD.setTime(5000);
    repeat
      SendKeys(ToString(summoningPresetQuick), 15+random(10), 15+random(10));
      Wait(RandomRange(350, 600));
    until(failureCD.isFinished() or (not bankOpen()));
    if(bankOpen())then
      killScript('Quick withdraw from bank is not working.');
    if(ogl.getTextures([goldCharmTextureID, greenCharmTextureID, redCharmTextureID, blueCharmTextureID]).indexes() = 0)then
      killScript('Withdrawing seemed to work... But no charms were found.');

    //walk to pole
    mouse(Point(RandomRange(638, 671), RandomRange(18, 32)), mouse_left);
    failureCD.setTime(30000);
    repeat
      if (minimap.getRunEnergy()>50) and (not tMinimap.getRunMode()) then
        tminimap.setRunMode(true);
      summoningMarker:= ogl.getTextures(summoningMinimapTextureID);
      Wait(650);
    until((summoningMarker.indexes() > 0) or failureCD.isFinished);
    if(failureCD.isFinished)then
    begin
      killScript('Never found the summoning minimap marker.');
    end;
    Wait(RandomRange(2500, 4500));
    summoningMarker:= ogl.getTextures(summoningMinimapTextureID);
    clickPoint:= summoningMarker[0].randomizePointEllipse(15);
    clickPoint.Y:= clickPoint.Y + 13;
    mouse(clickPoint, mouse_Left);
    Wait(500);

    //click dat pole
    failureCD.setTime(30000);
    repeat
      Wait(RandomRange(520, 870));
      obelisk:= ogl.getModels(summoningObeliskModelID);
    until(failureCD.isFinished or (obelisk.indexes() > 0));
    Wait(RandomRange(1000, 1600));
    obelisk:= ogl.getModels(summoningObeliskModelID);
    if(tmouse.rightClickOption(obelisk.closestTo(clientCenter)[0].randomizePointEllipse(15), 'Infuse-pouch Obelisk', random(200, 400))) then
    begin
      failureCD.setTime(20000);
      repeat
        Wait(RandomRange(520, 870));
      until(failureCD.isFinished or productionScreen.isOpen());
      if(not productionScreen.isOpen())then
        killScript('Production screen at obelisk never opened.');

      failureCD.setTime(2000);
      repeat
        productionScreen.clickStart(true);
        Wait(RandomRange(500, 650));
      until(failureCD.isFinished or (not productionScreen.isOpen()));
      if(productionScreen.isOpen())then
      begin
        productionScreen.clickStart(true);
        Wait(RandomRange(700,1350));
      end;
    end;

    //possibly make scrolls
    if(ezMakeScrolls.checked)then
    begin
      repeat
        Wait(RandomRange(230, 540));
        obelisk:= ogl.getModels(summoningObeliskModelID);
      until(failureCD.isFinished or (obelisk.indexes() > 0));
      if(tmouse.rightClickOption(obelisk.closestTo(clientCenter)[0].randomizePointEllipse(15), 'Infuse-pouch Obelisk', random(200, 400))) then
      begin
        failureCD.setTime(20000);
        repeat
          Wait(RandomRange(520, 870));
        until(failureCD.isFinished or productionScreen.isOpen());
        if(not productionScreen.isOpen())then
          killScript('Production screen at obelisk never opened.');

        failureCD.setTime(2000);
        repeat
          productionScreen.clickStart(true);
          Wait(RandomRange(500, 650));
        until(failureCD.isFinished or (not productionScreen.isOpen()));
        if(productionScreen.isOpen())then
        begin
          productionScreen.clickStart(true);
          Wait(RandomRange(700,1350));
        end;
      end;
    end;

    //Walk back to bank chest
    mouse(Point(RandomRange(694,757), RandomRange(155,181)), mouse_Left);
    failureCD.setTime(30000);
    repeat
      if (minimap.getRunEnergy()>50) and (not tMinimap.getRunMode()) then
        tminimap.setRunMode(true);
      bankMinimapTexture:= ogl.getTextures(bankMinimapTextureID, bankMinimapTextureColorID);
      Wait(650);
    until((bankMinimapTexture.indexes() > 0) or failureCD.isFinished);
    TravelToAmloddFromIthell();
    waitFlag();
    summoningTrips:= summoningTrips + 1;
    proggy();
    voice:= ogl.getTextures(amloddTextureID);
  end;
  if(voice.indexes() = 0)then
  begin
    result:= true;
    Writeln('Amlodd is done!');
  end else
    killScript('Amlodd failed for some reason.');
end;

function Trahaern(): boolean;
var
  voice: glTextureArray;
begin
  //Todo, drink a dose of some potion (if it's around)
  //Todo, use an aura after verifying it hasn't been used today.
  //Todo, use a summoning pouch
  voice:= ogl.getTextures(trahaernTextureID);
  while(voice.indexes() >= 0) do
  begin
    if(tabBackpack.count)then
    begin
      //run to bank
      //Quick slot, so i can get gem bag too
      //run back to mining
    end;
    //click gem rock
    //Do you have to click a mining spirit?
  end;
  if(voice.indexes() = 0)then
  begin
    result:= true;
    Writeln('Trahaern is done!');
  end else
    killScript('Trahaern failed for some reason.');
end;

//100% written by Clarity.  If I'm honest, I didn't even read this in enough
//detail to figure out exactly how it works.  Just enough to edit the failure code.
procedure lodestonePrifddinas();
begin
  failureCD.setTime(15000);
  repeat
    tminimap.clickHomeTeleport();
    wait(random(400, 900));
  until lodestone.hasLodestone() or failureCD.isFinished();
  if failureCD.isFinished() then
  begin
    killScript('Lodestone Interface Open failed.');
  end;
  failureCD.setTime(15000);
  repeat
    lodestone.clickTeleport('prifddinas');
    wait(random(1800, 2400));
  until (not lodestone.hasLodestone()) or failureCD.isFinished();
  if failureCD.isFinished() then
  begin
    killScript('Lodestone Interface Closed.');
  end;
  failureCD.setTime(15000);
  repeat
    wait(random(600, 1200));
  until (tminimap.getLocalPosition().equals(point(61, 68))) or failureCD.isFinished();
  if failureCD.isFinished() then
  begin
    killScript('Local Position Wait');
  end;
  wait(random(1500, 2200));
end;

function WalkToHarpsFromChest(): boolean;
begin
  waitFlag();
  mouse(Point(RandomRange(607, 623), RandomRange(112,130)), mouse_Left);
  Wait(1500);
  waitFlag();
end;

function WalkToIthellChestFromLodestone(): boolean;
begin
  //TODO
end;

function TravelToCryws(): boolean;
begin
  lodestonePrifddinas();
  //todo: walk to Cryws somehow
end;

function TravelToHefin(): boolean;
begin
  lodestonePrifddinas();
  //todo: walk to Hefin somehow
end;

function TravelToTrahaern(): boolean;
begin
  lodestonePrifddinas();
  //todo: walk to Trahaern somehow
end;

function TravelToIthell(): boolean;
begin
  lodestonePrifddinas();
  WalkToIthellChestFromLodestone();
  WalkToHarpsFromChest();
end;

function TravelToAmlodd(): boolean;
begin
  lodestonePrifddinas();
  WalkToIthellChestFromLodestone();
end;

function TravelToIthellFromAmlodd(): boolean;
begin
  WalkToHarpsFromChest();
end;

function MainLoop(): boolean
var
  currentClan, pastClan: tClan;
begin
  pastClan:= currentClan;
  currentClan:= pickCurrentClan();
  case currentClan.name of
    'Amlodd':
      begin
        if(pastClan.name = 'Ithell')then
        begin
          TravelToAmloddFromIthell();
        end else begin
          TravelToAmlodd();
        end;
        if(not Amlodd())then
          KillScript('Something happened, breaking Amlodd.  Read the debug.');
      end;
    'Cadarn':KillScript('TODO: Cadarn not implemented');
    'Cryws':
      begin
        TravelToCryws();
        if(not Cryws())then
          KillScript('Something happened, breaking Cryws.  Read the debug.');
      end;
    'Hefin':
      begin
        TravelToHefin();
        if(not Hefin())then
          KillScript('Something happened, breaking Hefin.  Read the debug.');
      end;
    'Ithell':
      begin
        if(pastClan.name = 'Amlodd')then
        begin
          TravelToIthellFromAmlodd();
        end else begin
          TravelToIthell();
        end;
        if(not Ithell())then
          KillScript('Something happened, breaking Ithell.  Read the debug.');
      end;
    'Lorwerth':KillScript('TODO: Lorwerth not implemented');
    'Meilyr':KillScript('TODO: Meilyr not implemented');
    'Trahaern':
      begin
        TravelToTrahaern();
        if(not Trahaern())then
          KillScript('Something happened, breaking Trahaern.  Read the debug.');
      end;
  end;
  result:= true;
end;


begin
  Initialize();
  mainScreenBox:= IntToBox(0, 0, mainScreenX, mainScreenY);

  initPlayerForm();
  runPlayerForm();
  if (not playerForm.isScriptReady) then
    terminatescript;
  // Sets global variables from the playerform
  players.Setup(playerForm.playerNames, playerForm.playerFile);
  players[0].world := strToInt(playerForm.players[0].settings[0]);

  ogl.setup([800, 600], [0, 0, mainScreenX, mainScreenY]);
  ogl.setDebugMode('n');
  disableSRLDebug:=true;
  smart.graphics.Clear();
  formCreate();
  {
  printAllTexturesInMainscreen();
  exit;
   }
  if (not tLogin.hasLogin()) then//tLogin.hasLogin() only works on base not logged in screen.
  begin
    players[0].login();
    wait(randomRange(1500, 3000));
    setCameraLikePlayer();
  end;
  clientCenter := Point(288, 189);// ogl.getClientMidPoint();
  playerModel:= getPlayerModel(ezDebug.checked());

  {printAllTexturesInArea(mainScreenX, 320, 800,  600);
  printAllTexturesInArea(0, 0, mainScreenX, mainScreenY);
                      {
  loadBankPresetSlow(2);
  exit;
  {}          {
  repeat
    //ClearDebug();
    //printAllTexturesInArea(125, 550, 176, 597);
    printAllTexturesInArea(750, 0, 800, 100);
    //printAllModelsInArea(clientCenter.x-20, clientCenter.y-25, clientCenter.x+20, clientCenter.y+25);
    //writeln(getPlayerModel());
    wait(5000);
  until(false);
  exit;{}
  repeat
    pickCurrentClan();
    writeln('current choice is ' + clans[currentClan].name);
  until (ithell() );
end.
